<MvCOMMENT>
|
|	Functions for FIELDS
|
|	Field_Read( field var, view )
|	Field_Insert_LowLevel( field var )
|	Field_Insert( field var )
|	Field_Load_ID( id, output var )
|	Field_Update_LowLevel( field var )
|	Field_Update( field var )
|	Field_Delete( field_id )
|
|	JSON_Fields_Load_Query( module var )
|	JSON_Field_Insert( module var )
|	JSON_Field_Update( module var )
|	JSON_Field_Delete( module var )
|	JSON_Field_DisplayOrder_Update( module var )
|	JSON_Load_Fields( module var )
|
|	FieldList_Update_Offsets( data_id, fields var)
|	FieldList_Update_Offsets_PastEnd( data_id, pastend var, pastend_count )
|
|	Load_Data_Fields( data_id, output var )
|	Delete_Data_Fields( data_id )
|	Load_Field_Options( field_id, output var )
|
</MvCOMMENT>

<MvFUNCTION NAME = "Field_Read" PARAMETERS = "field var, view">
	<MvASSIGN NAME = "l.field" MEMBER = "id"			VALUE = "{ miva_variable_value( l.view $ '.d.id' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "data_id"		VALUE = "{ miva_variable_value( l.view $ '.d.data_id' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "code"			VALUE = "{ miva_variable_value( l.view $ '.d.code' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "prompt"		VALUE = "{ miva_variable_value( l.view $ '.d.prompt' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "type"			VALUE = "{ miva_variable_value( l.view $ '.d.type' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "required"		VALUE = "{ miva_variable_value( l.view $ '.d.required' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "disp_order"	VALUE = "{ miva_variable_value( l.view $ '.d.disp_order' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Insert_LowLevel" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGCD_Fields' ) }">
	<MvASSIGN NAME = "l.field:disp_order" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGCD_Fields_DispOrder' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGCD_Fields
					      ( id, data_id, code, prompt, type, required, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?  )' }"
			 FIELDS	= "l.field:id, l.field:data_id, l.field:code, l.field:prompt, l.field:type, l.field:required, l.field:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ trim( l.field:code ) }">
	<MvASSIGN NAME = "l.field:prompt"		VALUE = "{ trim( l.field:prompt ) }">
	<MvASSIGN NAME = "l.field:type"			VALUE = "{ trim( l.field:type ) }">
	<MvASSIGN NAME = "l.field:required"		VALUE = "{ trim( l.field:required ) }">
	<MvASSIGN NAME = "l.field:disp_order"	VALUE = "{ trim( l.field:disp_order ) }">

	<MvIF EXPR = "{ NOT Data_Load_ID( l.field:data_id, l.data ) }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Invalid Data ID">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "data_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:code }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field:code ) }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:prompt }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "prompt">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:type }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Type must be selected.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "type">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:required }">
		<MvASSIGN NAME = "l.field:required" VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:disp_order }">
		<MvASSIGN NAME = "l.field:disp_order" VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ Field_Load_Code( l.field:code, l.field:data_id, l.code_check ) }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "This code already exist.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Field_Insert_LowLevel( l.field ) }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGCD_Fields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGCD_Fields WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGCD_Fields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGCD-FIELD-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Field_Read( l.output, 'TGCD_Fields' ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Load_Code" PARAMETERS = "code, data_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGCD_Fields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGCD_Fields WHERE code = ? AND data_id = ?' }"
				FIELDS	= "l.code, l.data_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGCD_Fields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGCD-FIELD-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Field_Read( l.output, 'TGCD_Fields' ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Update_LowLevel" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGCD_Fields
					      SET
							code		= ?,
							prompt		= ?,
							type		= ?,
							required	= ?
					      WHERE
						    id		= ?' }"
			 FIELDS	= "l.field:code, l.field:prompt, l.field:type, l.field:required, l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ ( l.field:type NE 'radio' ) AND ( l.field:type NE 'select') }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Option_Delete_Field_All( l.field:id ) }">	
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Update" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Field_Load_ID( l.field:id, l.prev_field ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field:code"			VALUE = "{ trim( l.field:code ) }">
	<MvASSIGN NAME = "l.field:prompt"		VALUE = "{ trim( l.field:prompt ) }">
	<MvASSIGN NAME = "l.field:type"			VALUE = "{ trim( l.field:type ) }">
	<MvASSIGN NAME = "l.field:required"		VALUE = "{ trim( l.field:required ) }">
	<MvASSIGN NAME = "l.field:disp_order"	VALUE = "{ trim( l.field:disp_order ) }">

	<MvIF EXPR = "{ ISNULL l.field:code }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field:code ) }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:prompt }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "prompt">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:type }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "Type must be selected.">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "type">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:required }">
		<MvASSIGN NAME = "l.field:required" VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ l.field:code NE l.prev_field:code }">
		<MvIF EXPR = "{ Field_Load_Code( l.data:code, l.field:data_id, l.code_check ) }">
			<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "This code already exist.">
			<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Field_Update_LowLevel( l.field ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Field_Delete" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGCD_Fields WHERE id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0007', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Option_Delete_Field_All( l.field_id ) }">
		<MvASSIGN NAME = "g.TGCD_Error:message" VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCD_Error:name" VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	Start JSON
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Fields_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter" VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort" VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset" VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count" VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "g.Data_ID" VALUE = "{ trim( g.Data_ID ) }">

	<MvASSIGN NAME = "l.search_query"				VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query, 'field.id				AS field_id,
																				 field.data_id			AS field_data_id,
																				 field.code				AS field_code,
																				 field.prompt			AS field_prompt,
																				 field.type				AS field_type,
																				 field.required			AS field_required,
																				 field.disp_order		AS field_disp_order,
																				 opt.id				AS opt_id,
																				 opt.field_id		AS opt_field_id,
																				 opt.code			AS opt_code,
																				 opt.prompt			AS opt_prompt,
																				 opt.disp_order		AS opt_disp_order' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGCD_Fields', 'field' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 'field', g.Store_Table_Prefix $ 'TGCD_Options', 'opt', 'opt.field_id = field.id', '' ) }">
	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'field.data_id = ?', 'g.data_id' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'code:field.code;opt.code,prompt:field.prompt;opt.prompt,type:field.type,required:field.required' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields( l.search_query, g.Sort,
																		'code:field.code;opt.code,
																		prompt:field.prompt;opt.prompt,
																		type:field.type,
																		required:field.required',
																		'field.disp_order;opt.disp_order' ) }">
																			
	<MvASSIGN NAME = "l.search_sql"			VALUE = "{ [ g.Module_Library_DB ].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGCD_Fields"
				QUERY	= "{ l.search_sql }"
				FIELDS	= "{ l.search_fields }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGCD-FIELD-JSON-0001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.total_count"		VALUE = 0>
	<MvASSIGN NAME = "l.field_count"		VALUE = 0>
	<MvASSIGN NAME = "l.opt_count"		VALUE = 0>
	<MvASSIGN NAME = "l.last_field_id"	VALUE = 0>
	<MvASSIGN NAME = "l.last_opt_id"	VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
	{
		"data":
		[
		<MvWHILE EXPR = "{ NOT TGCD_Fields.d.EOF }">
			<MvIF EXPR = "{ l.last_field_id NE TGCD_Fields.d.field_id }">
				<MvIF EXPR = "{ l.opt_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					]
				</MvIF>

				<MvIF EXPR = "{ l.field_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.field_count ) }">
				"id":			<MvEVAL EXPR = "{ int( TGCD_Fields.d.field_id ) }">,
				"data_id":		<MvEVAL EXPR = "{ int( TGCD_Fields.d.field_data_id ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGCD_Fields.d.field_code ) }">",
				"disp_order":	<MvEVAL EXPR = "{ int( TGCD_Fields.d.field_disp_order ) }">,
				"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGCD_Fields.d.field_prompt ) }">",
				"type":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGCD_Fields.d.field_type ) }">",
				"required":		<MvEVAL EXPR = "{ int( TGCD_Fields.d.field_required ) }">
				
				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_field_id"	VALUE = "{ TGCD_Fields.d.field_id }">
				<MvASSIGN NAME = "l.last_opt_id"	VALUE = 0>
				<MvASSIGN NAME = "l.opt_count"		VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ l.last_opt_id NE TGCD_Fields.d.opt_id AND NOT ISNULL TGCD_Fields.d.opt_id }">
				<MvIF EXPR = "{ l.opt_count }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
				</MvIF>

				<MvIF EXPR = "{ NOT l.opt_count }">
					, "options":
					[
				</MvIF>

				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.opt_count ) }">
				"id":			<MvEVAL EXPR = "{ int( TGCD_Fields.d.opt_id ) }">,
				"field_id":		<MvEVAL EXPR = "{ int( TGCD_Fields.d.opt_field_id ) }">,
				"disp_order":	<MvEVAL EXPR = "{ int( TGCD_Fields.d.opt_disp_order ) }">,
				"code":			"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGCD_Fields.d.opt_code ) }">",
				"prompt":		"<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGCD_Fields.d.opt_prompt ) }">"

				<MvASSIGN NAME = "l.total_count"		VALUE = "{ l.total_count + 1 }">
				<MvASSIGN NAME = "l.last_opt_id"	VALUE = "{ TGCD_Fields.d.opt_id }">
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "TGCD_Fields" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

		<MvIF EXPR = "{ l.opt_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			]
		</MvIF>

		<MvIF EXPR = "{ l.field_count }">
			<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
		</MvIF>
		],
		"start_offset": 0,
		"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">
	}
}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Field_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:data_id"		VALUE = "{ g.Data_ID }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.field:prompt"		VALUE = "{ g.Prompt }">
	<MvASSIGN NAME = "l.field:type"			VALUE = "{ g.Type }">
	<MvASSIGN NAME = "l.field:required"		VALUE = "{ g.Required }">
	<MvASSIGN NAME = "l.field:disp_order"	VALUE = "{ g.Disp_Order }">

	<MvIF EXPR = "{ NOT Field_Insert( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCD_Error:name, g.TGCD_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Field_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id"			VALUE = "{ g.ID }">
	<MvASSIGN NAME = "l.field:data_id"		VALUE = "{ g.Data_ID }">
	<MvASSIGN NAME = "l.field:code"			VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.field:prompt"		VALUE = "{ g.Prompt }">
	<MvASSIGN NAME = "l.field:type"			VALUE = "{ g.Type }">
	<MvASSIGN NAME = "l.field:required"		VALUE = "{ g.Required }">
	<MvASSIGN NAME = "l.field:disp_order"	VALUE = "{ g.Disp_Order }">

	<MvIF EXPR = "{ NOT Field_Update( l.field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCD_Error:name, g.TGCD_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Field_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Field_Delete( g.ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCD_Error:name, g.TGCD_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Field_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }"><MvFUNCTIONRETURN></MvIF>
	<MvASSIGN NAME = "l.data_id" VALUE = "{ g.Data_ID }">

	<MvFOREACH ITERATOR = "l.field_order" ARRAY = "g.Fields_DisplayOrder" INDEX = "l.pos">
		<MvASSIGN NAME = "l.field_order:id"					VALUE = "{ int( l.field_order:id ) }">
		<MvASSIGN NAME = "l.field_order:offset"				VALUE = "{ int( l.field_order:offset ) }">
		<MvASSIGN NAME = "l.field_order:original_offset"	VALUE = "{ int( l.field_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.field_order:offset ) }">
			<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Fields_DisplayOrder[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.field_order" ARRAY = "g.Option_Order" INDEX = "l.attr_pos">
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.field_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_order:id"				VALUE = "{ int( l.option_order:id ) }">
			<MvASSIGN NAME = "l.option_order:offset"			VALUE = "{ int( l.option_order:offset ) }">
			<MvASSIGN NAME = "l.option_order:original_offset"	VALUE = "{ int( l.option_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.option_order:offset ) }">
				<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Option_Order[' $ l.attr_pos $ '][ ' $ l.option_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.field_order" ARRAY = "g.Fields_DisplayOrder">
		<MvIF EXPR = "{ l.field_order:offset EQ l.field_order:original_offset }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.field_changes" INDEX = "{ ++l.field_count }" VALUE = "{ l.field_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.field_count }">
		<MvIF EXPR = "{ NOT FieldList_Update_Offsets( l.data_id, l.field_changes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field_order" ARRAY = "g.Option_Order" INDEX = "l.field_id">
		<MvASSIGN NAME = "l.option_count" VALUE = 0>
		
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.field_order" INDEX = "l.option_pos">
			<MvIF EXPR = "{ l.option_order:offset EQ l.option_order:original_offset }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.option_changes" INDEX = "{ ++l.option_count }" VALUE = "{ l.option_order }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.option_count }">
			<MvIF EXPR = "{ NOT OptionList_Update_Offsets( l.field_id, l.option_changes ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Load_Fields" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"fields":
			[
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Data_Fields( g.Data_ID, l.fields ) }" INDEX = "{ l.count }">
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( l.field:id ) }">,
					"data_id": <MvEVAL EXPR = "{ int( l.field:data_id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:code ) }">",
					"prompt" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:prompt ) }">",
					"type" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:type ) }">",
					"required": <MvEVAL EXPR = "{ int( l.field:required ) }">,
					"disp_order": <MvEVAL EXPR = "{ int( l.field:disp_order ) }">
					<MvIF EXPR = "{ Load_Field_Options( l.field:id, l.field:options ) }">
						,
						"options": [
							<MvFOREACH ITERATOR = "l.option" ARRAY = "l.field:options" INDEX = "l.count">
								<MvIF EXPR = "{ l.count GT 1 }">,</MvIF>
								{
									"id": <MvEVAL EXPR = "{ int( l.option:id ) }">,
									"field_id": <MvEVAL EXPR = "{ int( l.option:field_id ) }">,
									"code": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:code ) }">",
									"prompt": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.option:prompt ) }">",
									"disp_order": <MvEVAL EXPR = "{ int( l.option:disp_order ) }">
								}
							</MvFOREACH>
						]
					</MvIF>
				<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
			</MvFOREACH>
			]
		}
	}
</MvFUNCTION>

<MvFUNCTION NAME = "FieldList_Update_Offsets" PARAMETERS = "data_id, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"				VALUE = 0>

	<MvASSIGN NAME = "l.field_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.field_count"			VALUE = "{ miva_array_elements( l.fields ) }">
	<MvASSIGN NAME = "g.Field_Data_ID" VALUE = "{ l.data_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.fields, l.field_count ) }">

	<MvWHILE EXPR = "{ l.field_pos LE l.field_count }">
		<MvASSIGN NAME = "g.Fields_Order_FieldID" 	VALUE = "{ l.fields[ l.field_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current field at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGCD_Fields',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGCD_Fields WHERE id <> ? AND data_id = ? ORDER BY disp_order',
																				   'g.Fields_Order_FieldID, g.Field_Data_ID',
																				   l.fields[ l.field_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0009', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ TGCD_Fields.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.fields[ l.field_pos ] }">

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

			<MvIF EXPR = "{ NOT FieldList_Update_Offsets_PastEnd( l.data_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGCD_Fields.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

			<MvCOMMENT>
			|
			| Make a hole by shifting fields after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGCD_Fields 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order >= ? AND data_id = ?' }" 
													FIELDS = "l.disp_order, l.data_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0010', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGCD_Fields_DispOrder' ) }">

			<MvCOMMENT>
			|
			| Put the field in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGCD_Fields 
													SET 
														disp_order = ? 
													WHERE 
														id = ? AND data_id = ?' }" 
													FIELDS = "l.disp_order, g.Fields_Order_FieldID, l.data_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0011', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT FieldList_Update_Offsets_PastEnd( l.data_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FieldList_Update_Offsets_PastEnd" PARAMETERS = "data_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.Fields_Order_FieldID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGCD_Fields_DispOrder' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'TGCD_Fields 
												SET 
													disp_order = ? 
												WHERE 
													id = ? AND data_id = ?' }" 
												FIELDS = "l.disp_order, g.Fields_Order_FieldID, l.data_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0012', g.MvQUERY_Error ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Data_Fields" PARAMETERS = "data_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGCD_Fields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGCD_Fields WHERE data_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.data_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGCD_Fields.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGCD-FIELD-0014' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = "0">

	<MvWHILE EXPR = "{ ( NOT TGCD_Fields.d.EOF ) }">
		<MvEVAL EXPR = "{ Field_Read( l.output[++l.count], 'TGCD_Fields' ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGCD_Fields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Fields">

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Delete_Data_Fields" PARAMETERS = "data_id" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Data_Fields( l.data_id, l.fields ) }">
		<MvIF EXPR = "{ NOT Field_Delete( l.field:id ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0015', g.MvOPENVIEW_Error ) }">
		</MvIF>
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Field_Options" PARAMETERS = "field_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGCD_Options"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGCD_Options WHERE field_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-FIELD-0013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGCD_Options.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Options">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGCD-FIELD-0014' ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = "0">

	<MvWHILE EXPR = "{ ( NOT TGCD_Options.d.EOF ) }">
		<MvEVAL EXPR = "{ Option_Read( l.output[++l.count], 'TGCD_Options' ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGCD_Options" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGCD_Options">

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>