<MvCOMMENT>
|
|	Functions for FRONTEND
|	
|	FrontEnd_Form()
|	FrontEnd_Validate_Field( field var, current_value )
|
</MvCOMMENT>

<MvFUNCTION NAME = "FrontEnd_FormSubmit" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		Form_Code
		Fields:[ Code ]
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT Data_Load_Code( g.Form_Code, l.data ) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "The Data form does not exist.">
		<MvASSIGN NAME = "l.error:name" VALUE = "Form_Code">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( g.TGCD_Errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Data_Fields( l.data:id, l.fields) }">
		<MvIF EXPR = "{ l.field:admin EQ 1 }">
			<MvASSIGN NAME = "{ 'g.Fields:' $ l.field:code }" VALUE = "">
			<MvFOREACHCONTINUE />
		</MvIF>
		<MvASSIGN NAME = "l.current_value" VALUE = "{ trim( miva_variable_value( 'g.Fields:' $ l.field:code )) }">	
		<MvASSIGN NAME = "l.void" VALUE = "{ FrontEnd_Validate_Field( l.field, l.current_value, g.TGCD_Errors) }">
	</MvFOREACH>

	<MvIF EXPR = "{ miva_array_elements( g.TGCD_Errors ) GT 0 }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Values_Insert( g.Fields, l.data:id) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( g.TGCD_Errors, g.TGCD_Error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "g.Fields" VALUE = "">
	<MvASSIGN NAME = "g.TGCD_Success" VALUE = 1>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FrontEnd_Validate_Field" PARAMETERS = "field var, current_value, errors var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( l.field:required EQ 1 ) AND ( ISNULL l.current_value ) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "{ l.field:prompt $ ' is required.' }">
		<MvASSIGN NAME = "l.error:name" VALUE = "{ l.field:code }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( l.errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ( NOT ISNULL l.current_value ) AND ( l.field:type EQ 'email' ) AND ( NOT [ g.Module_Library_Utilities ].Email_Validate( l.current_value ) ) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "{ 'Please specify a valid email address for ' $ l.field:prompt }">
		<MvASSIGN NAME = "l.error:name" VALUE = "{ l.field:code }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( l.errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FrontEnd_Load_DataFields" PARAMETERS = "data_code, return var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Data_Load_Code( l.data_code, l.data ) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "The Data form does not exist.">
		<MvASSIGN NAME = "l.error:name" VALUE = "Form_Code">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( g.TGCD_Errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.return:data" VALUE = "{ l.data }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Data_Fields( l.data:id, l.fields) }">
		<MvIF EXPR = "{ l.field:admin EQ 1 }">
			<MvFOREACHCONTINUE />
		</MvIF>

		<MvASSIGN NAME = "l.field" MEMBER = "value" VALUE = "{ trim( miva_variable_value( 'g.Fields:' $ l.field:code )) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Load_Field_Options( l.field:id, l.field:options ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( l.return:fields, l.field, -1 ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "FrontEnd_Load_Data" PARAMETERS = "data_code, simple_search, advanced_search, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Data_Load_Code( l.data_code, l.data ) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "The Data form does not exist.">
		<MvASSIGN NAME = "l.error:name" VALUE = "Form_Code">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( g.TGCD_Errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ miva_array_elements( l.advanced_search ) GT 0 }">
		<MvASSIGN NAME = "l.void" VALUE = "{ FrontEnd_Build_AdvancedSearch( l.advanced_search, g.Filter ) }">
	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ trim( g.Count ) }">
	<MvIF EXPR = "{ NOT g.Count }">
		<MvASSIGN NAME = "g.Count" VALUE = "24">
	</MvIF>
	<MvASSIGN NAME = "g.Data_ID"		VALUE = "{ l.data:id }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'g.group_id as group_id' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGCD_Groups', 'g' ) }">

	<MvASSIGN NAME = "g.Filter_List" VALUE = "{ 'group_id:g.group_id' }">
	
	<MvEVAL EXPR = "{ Values_Build_Queries( l.search_query, g.Data_ID, g.Filter_List, l.data_fields ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'g.data_id = ?', 'g.Data_ID' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter, g.Filter_List ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, g.Filter_List, 'g.group_id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "{ g.Error_Message }">
		<MvASSIGN NAME = "l.error:name" VALUE = "{ g.Error_Code }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( g.TGCD_Errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGCD_Groups', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvASSIGN NAME = "l.error:message" VALUE = "{ g.MvOPENVIEW_Error }">
		<MvASSIGN NAME = "l.error:name" VALUE = "DB_ERROR">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( g.TGCD_Errors, l.error, -1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvWHILE EXPR = "{ ( NOT TGCD_Groups.d.EOF ) AND ( ( g.Count EQ 0 ) OR ( l.count LT g.Count ) ) }">
		<MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }" />
		<MvASSIGN NAME = "l.output:data" INDEX = "{ l.count }" MEMBER = "group_id" VALUE = "{ TGCD_Groups.d.group_id }">
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.data_fields">
			<MvASSIGN NAME = "l.output:data" INDEX = "{ l.count }" MEMBER = "{ l.field:code }" VALUE = "{ miva_variable_value( 'TGCD_Groups.d.value_' $ l.field:id )}">
			<MvASSIGN NAME = "l.temp:code" VALUE = "{ l.field:code }">
		</MvFOREACH>
		<MvSKIP NAME = "Merchant" VIEW = "TGCD_Groups" ROWS = 1>
	</MvWHILE>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.data_fields">
		<MvASSIGN NAME = "l.temp:prompt" VALUE = "{ l.field:prompt }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( l.output:fields, l.temp, -1 ) }">
	</MvFOREACH>
	
	<MvASSIGN NAME = "l.output" MEMBER = "total_count" VALUE = "{ l.total_count }">
</MvFUNCTION>

<MvFUNCTION NAME = "FrontEnd_Build_AdvancedSearch" PARAMETERS = "array var, filter_output var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.search" ARRAY = "l.array">
		<MvIF EXPR = "{ l.filter_output }">
			<MvASSIGN NAME = "l.filter_output" VALUE = "{ l.filter_output $ '|' }">
		</MvIF>
		<MvIF EXPR = "{ toupper( l.search:type ) EQ 'OR' }">
			<MvASSIGN NAME = "l.filter_output" VALUE = "{ l.filter_output $ 'search_OR%3AFields_' $ l.search:code $ '%25253A' $ encodeattribute( l.search:operator ) $ '%25253A' $ encodeattribute( l.search:value ) }">
		<MvELSEIF EXPR = "{ toupper( l.search:type ) EQ 'AND' }">
			<MvASSIGN NAME = "l.filter_output" VALUE = "{ l.filter_output $ 'search_AND%3AFields_' $ l.search:code $ '%25253A' $ encodeattribute( l.search:operator ) $ '%25253A' $ encodeattribute( l.search:value ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.filter_output" VALUE = "{ l.filter_output $ 'search%3AFields_' $ l.search:code $ '%25253A' $ encodeattribute( l.search:operator ) $ '%25253A' $ encodeattribute( l.search:value ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>